{"timestamp":"2025-06-27T06:35:14.847010","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-27T06:35:14.847712","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/pipeline.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-27T06:35:18.365020Z","level":"info","event":"LOAD PHASE: Inserting perfume data into PostgreSQL...","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T06:35:18.736464","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-27T06:35:18.747668","level":"info","event":"Connection Retrieved 'perfumes_connection'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-27T06:35:18.757024","level":"info","event":"Running statement: \n    CREATE TABLE IF NOT EXISTS perfumes (\n        id INTEGER PRIMARY KEY,\n        name VARCHAR(500),\n        gender VARCHAR(100),\n        rating_value DECIMAL(3,2),\n        rating_count INTEGER,\n        main_accords TEXT,\n        perfumers TEXT,\n        description TEXT,\n        url VARCHAR(1000)\n    );\n    , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-06-27T06:35:29.056242Z","level":"info","event":"LOAD COMPLETE: Loaded 70100 records in batch.","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-27T06:35:29.097822","level":"info","event":"Done. Returned value was: Loaded 70100 perfumes.","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-06-27T06:35:29.098093","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0197b018-57c5-7582-957e-6fd07d5f6e18'), task_id='load_to_postgres', dag_id='fragrantica_etl', run_id='manual__2025-06-27T06:34:34.799804+00:00', try_number=1, map_index=-1, hostname='cecddce160d2', context_carrier={}, task=<Task(PythonOperator): load_to_postgres>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 6, 27, 6, 35, 14, 665933, tzinfo=TzInfo(UTC)), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task"}
